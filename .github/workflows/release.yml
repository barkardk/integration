name: Release
on:
  push:
    tags:
      - v*.*.*

jobs:
  release:
    name: Release nkdev
    runs-on: Ubuntu-latest
    needs: check
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set VERSION
        run: |
          export VERSION=$((git describe --tags --dirty --match='v*' 2>/dev/null || echo v0.0.0) | cut -c2- )
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build release
        run:
          - cd rabbitmq
          - make -j3 -d release

      - name: Create GH release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            # Changelog

            ## Features :new:

            ## Fixed issues :zap:

            ## Improvements :+1:

  check:
    runs-on: ubuntu-latest
    container:
      image: golang:1.16
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        run: cd rabbitmq
        with:
          version: v1.32
          args: --timeout 10m

