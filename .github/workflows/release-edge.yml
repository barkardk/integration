name: build-edge-release
on: [push, pull_request]
jobs:
  build:
    defaults:
      run:
        working-directory: ./rabbitmq
    strategy:
      matrix:
        go-version: [ 1.15.x, 1.16.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          VERSION=unstable
          SHORTREF=${GITHUB_SHA::8}
          TAGS="ghcr.io/barkardk/rabbitmq-client:${VERSION},ghcr.io/barkardk/rabbitmq-client:${SHORTREF}"
          echo ::set-output name=tags::${TAGS}

      - name: Download modules
        run:  go mod download -json

      - name: Build client
        run: make build.linux

      - name: Setup QUEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/barkardk
          username: ${{ github.actor  }}
          password: ${{ secrets.token }}

      - name: Build and deploy image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: rabbitmq
          file: rabbitmq/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          github-token: ${{ secrets.token }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

        env:
          VERSION: ${{ needs.setup.outputs.version }}
          REPOSITORY: ghcr.io/barkardk
          GITHUB_TOKEN: ${{ secrets.token }}


